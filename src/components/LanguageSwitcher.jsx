import React from 'react';
import { useNavigate, useLocation, useParams } from 'react-router-dom';
import { useTranslation } from 'react-i18next';
import { Button } from '@/components/ui/button';
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Globe } from 'lucide-react';

const LANGS = [
  { code: 'en', name: 'English', flag: 'üá¨üáß' },
  { code: 'ru', name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
  { code: 'pl', name: 'Polski',  flag: 'üáµüá±' },
  { code: 'ar', name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá∏üá¶' },
];

export default function LanguageSwitcher() {
  const { i18n } = useTranslation();
  const { lang } = useParams();
  const navigate = useNavigate();
  const location = useLocation();

  const current = LANGS.find(l => l.code === lang) || LANGS[0];

  const changeLanguage = (code) => {
    // –∑–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–≤—ã–π —Å–µ–≥–º–µ–Ω—Ç –ø—É—Ç–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫, —Å–æ—Ö—Ä–∞–Ω—è—è –æ—Å—Ç–∞–ª—å–Ω–æ–µ
    const rest = location.pathname.replace(/^\/(en|ru|pl|ar)/, '');
    const next = `/${code}${rest || '/'}`.replace(/\/{2,}/g, '/');
    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —è–∑—ã–∫, —á—Ç–æ–±—ã –ø—Ä–∏ F5 –Ω–µ –º–∏–≥–∞–ª–æ
    try {
      localStorage.setItem('i18nextLng', code);
      document.cookie = `i18next=${code}; path=/; max-age=31536000`;
    } catch {}
    navigate(`${next}${location.search}${location.hash}`);
  };

  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="outline" size="sm" className="flex items-center gap-2">
          <Globe className="h-4 w-4" />
          <span>{current.flag}</span>
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent align="end">
        {LANGS.map(l => (
          <DropdownMenuItem
            key={l.code}
            onClick={() => changeLanguage(l.code)}
            className="flex items-center gap-2"
          >
            <span className="text-lg">{l.flag}</span>
            <span>{l.name}</span>
          </DropdownMenuItem>
        ))}
      </DropdownMenuContent>
    </DropdownMenu>
  );
}
